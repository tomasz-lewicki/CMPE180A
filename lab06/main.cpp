#include <iostream>
#include <stdlib.h>

#include "OwnStack.h"

using namespace::std;

double doubleArray[] = {0.9139182678328138, 0.5232028269253931, 0.1114632812874905, 0.2968122901799818, 0.7275504759607827, 0.369876853811667, 0.38219364066413886, 0.8947794584447601, 0.8628681303813145, 0.5470394861818975, 0.5141433633291349, 0.4564413082739138, 0.03084734808450329, 0.5664685023304213, 0.6401904061187852, 0.06102801476729591, 0.13314586291581132, 0.9737733514986056, 0.930872312451092, 0.6604860194433974, 0.23565738593131302, 0.739835735947398, 0.23209245551790458, 0.8638058976624515, 0.6337123448219208, 0.11911000591109044, 0.9703584111166841, 0.4988716139425975, 0.9597162419676526, 0.6166949307889421, 0.23310753163418585, 0.9737010955287229, 0.2685459481191046, 0.41650708817575466, 0.03552686876472744, 0.6773080581680346, 0.9272600985848518, 0.22985926086547992, 0.7487096481885456, 0.5181079149802328, 0.4145246646892031, 0.4118646947447778, 0.7257453096750421, 0.5657529241875383, 0.09861330192641682, 0.03261524296733842, 0.445348754119263, 0.9747605716937792, 0.5360509944595969, 0.3217110728607012, 0.3208505979438261, 0.040392069083102444, 0.870009625279343, 0.6821975670752125, 0.5412230914034659, 0.8474431200771095, 0.1548395116130592, 0.190663944103449, 0.9496537484424526, 0.047658676315806336, 0.052962991316939934, 0.5460996262681179, 0.9798676486433734, 0.5756492760503121, 0.3272943325312284, 0.6677654934725069, 0.9611411679715091, 0.3167230785625481, 0.0751946657868936, 0.31478253957113145, 0.6038074002826369, 0.3191180599890121, 0.7424562965086506, 0.5539665573922617, 0.8256086418815303, 0.46323317299093303, 0.9193959459689928, 0.8063788970489718, 0.6980601273766094, 0.05348533034343683, 0.513656427845298, 0.46924181151468103, 0.5197564496150106, 0.22401806665755308, 0.7511372987812976, 0.11384259628826554, 0.6657170633027099, 0.13169692872009464, 0.0364895337763268, 0.8671800629584724, 0.968837851477648, 0.7275242875007302, 0.03172472075002608, 0.5225260472701346, 0.901297622637429, 0.8469162666356442, 0.49579035515062564, 0.7305644873215537, 0.005793612300773909, 0.28038178177515627};

template<class T>
Stack<T>::Stack(int maxSize)
{
    this->arr = new T[maxSize];
    this->size = 0;
    this->maxSize = maxSize;
}

template<class T>
Stack<T>::~Stack()
{
    delete[] arr;
}

template<class T>
void Stack<T>::push(T item)
{
    if(size == maxSize) throw 1; //stack is full
    else arr[size++] = item;
}

template<class T>
void Stack<T>::pop()
{
    if(size == 0) throw 1; //cannot pop from an empty stack
    else size--;
}

template<class T>
T Stack<T>::top()
{
    if(size == 0) throw 1; //Cannot check top of an empty stack
    else return arr[size-1];
}

int main()
{
    Stack<double> s = Stack<double>(100);
    
    for(int i=0; i<100; ++i)
    {
        s.push(doubleArray[i]);
    }

    for(int i=0; i<100; ++i)
    {
        std::cout << s.top() << std::endl;
        s.pop();
    }


}